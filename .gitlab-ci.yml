image: $CI_REGISTRY_IMAGE/build-image:v1.0.0_16_35

variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=/.m2/repository -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -Dsettings.security=${CI_PROJECT_DIR}/ci/settings-security.xml"
  MAVEN_CLI_OPTS: "-Dci.docker.registry=$CI_REGISTRY -Dci.docker.prefix=$CI_REGISTRY_IMAGE -Dci.docker.username=$CI_REGISTRY_USER -Dci.docker.password=$CI_REGISTRY_PASSWORD -Dci.docker.auth.string=$CI_REGISTRY_AUTH -Ddocker.http.proxy=${http_proxy} -Ddocker.https.proxy=${https_proxy} -Ddocker.verbose --batch-mode --errors --fail-at-end --show-version --settings ${CI_PROJECT_DIR}/ci/settings.xml"
  PARENT_PATH: "${CI_PROJECT_DIR}/motu-parent"
  PRODUCTS_PATH: "${CI_PROJECT_DIR}/motu-products"
  DISTRIB_PATH: "${CI_PROJECT_DIR}/motu-distribution"

stages:
  - prepare-build-image
  - prepare-cots-image
  - docker-package-build-push
  - publish-images
  - publish-k8s
  - deploy

before_script:
  - env
  - chmod +x ci/get-version.sh
  - export VERSION=$(ci/get-version.sh)

prepare-build-image:
  image: docker:latest
  services:
    - docker:dind
  stage: prepare-build-image
  script:
    - cd ci/docker/build-image
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/build-image:v1.0.0_16_35 .
    - docker push $CI_REGISTRY_IMAGE/build-image:v1.0.0_16_35
  when: manual
  
prepare-cots-image:
  image: $CI_REGISTRY_IMAGE/build-image:v1.0.0_16_35
  services:
    - docker:dind
  stage: prepare-cots-image
  script:
    - 'mkdir ~/.m2'
    - 'cp ${CI_PROJECT_DIR}/ci/toolchains.xml ~/.m2/'
    - 'mkdir -p /opt/cmems-cis/motu/products'
    - 'export MOTU_PRODUCTS_DIR=/opt/cmems-cis/motu/products'
    - 'cp ${PRODUCTS_PATH}/src/main/scripts/cots-versions.sh ${MOTU_PRODUCTS_DIR}'
    - 'cp -r ${PRODUCTS_PATH}/src/main/scripts/cdo-group ${MOTU_PRODUCTS_DIR}'
    - 'pwd'
    - 'ls -l ${MOTU_PRODUCTS_DIR}'
    - 'ls -l /opt/cmems-cis/motu/products'
    - 'cd ${MOTU_PRODUCTS_DIR}'
    - 'ls -l ${PRODUCTS_PATH}'
    - 'ls -l ${PRODUCTS_PATH}/src'
    - 'ls -l ${PRODUCTS_PATH}/src/main'
    - 'ls -l ${PRODUCTS_PATH}/src/main/docker'
    - 'ls -l ${MOTU_PRODUCTS_DIR}'
    - 'ls -l ${MOTU_PRODUCTS_DIR}/cdo-group'
    - 'chmod +x ${MOTU_PRODUCTS_DIR}/cdo-group/*.sh'
    - 'chmod +x ${MOTU_PRODUCTS_DIR}/cots-versions.sh'
    - 'chmod +x ${PRODUCTS_PATH}/src/main/docker/install-cots.sh'
    - '. ${MOTU_PRODUCTS_DIR}/cots-versions.sh'
    - '. ${PRODUCTS_PATH}/src/main/docker/install-cots.sh'
    - 'cd ${PRODUCTS_PATH}'
    - 'mkdir -p ${PRODUCTS_PATH}/target-cots/products'
    - 'rm ${MOTU_PRODUCTS_DIR}/cdo-group/install-cdo.sh'
    - 'rm ${MOTU_PRODUCTS_DIR}/cots-versions.sh'
    - 'rm ${MOTU_PRODUCTS_DIR}/tomcat-native-${LIBTCNATIVE_VERSION}.rpm'
    - 'mv ${MOTU_PRODUCTS_DIR}/* ${PRODUCTS_PATH}/target-cots/products/.'
    - 'rm -r /opt/cmems-cis'
    - 'ls -l ${PRODUCTS_PATH}/target-cots/products'
    - 'ls -l ${PRODUCTS_PATH}/target-cots/products/cdo-group'
    - 'mvn $MAVEN_CLI_OPTS clean package -DskipTests docker:build'
    - 'mvn $MAVEN_CLI_OPTS docker:push'
  when: manual

docker-package-build-push:
  stage: docker-package-build-push
  services:
    - docker:dind
  script:
    - 'mkdir ~/.m2'
    - 'cp ${CI_PROJECT_DIR}/ci/toolchains.xml ~/.m2/'
    - 'cd ${PARENT_PATH}'
    - 'export BUILD_TIMESTAMP=$(date +%Y%m%d%H%M%N|cut -c -17)'
    - 'mvn $MAVEN_CLI_OPTS clean install -DskipTests -Dbuild-timestamp=${BUILD_TIMESTAMP}'
    - 'cd ${DISTRIB_PATH}'
    - 'ls -l ${CI_PROJECT_DIR}/motu-distribution/target'
    - 'mv -v ${CI_PROJECT_DIR}/motu-distribution/target/*-distribution*.tar.gz ${PRODUCTS_PATH}/src/main/docker/bin'
    - 'ls -l ${CI_PROJECT_DIR}/motu-products/target'
    - 'mv -v ${CI_PROJECT_DIR}/motu-products/target/*-products*.tar.gz ${PRODUCTS_PATH}/src/main/docker/bin'
    - 'ls -l ${CI_PROJECT_DIR}/motu-scripts/target'
    - 'mvn $MAVEN_CLI_OPTS clean package -DskipTests docker:build'
  artifacts:
    paths:
      - "*/target/*-k8s-assembly.zip"
    expire_in: 1 week

publish-images:
  cache: {}
  stage: publish-images
  services:
    - docker:dind
  only:
    - tags
    - master
    - develop
    - /^hotfix\/.*$/
  script:
    - env
    - echo "deploy"
  when: manual

deploy:
  stage: deploy
  only:
    - tags
    - master
    - develop
    - /^hotfix\/.*$/
  script:
    - env
    - echo "deploy"
  when: manual
