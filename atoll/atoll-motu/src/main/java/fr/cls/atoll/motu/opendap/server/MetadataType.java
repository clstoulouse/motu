//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// vhudson-jaxb-3268
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2007.12.21 at 08:38:29 AM CET
//

package fr.cls.atoll.motu.opendap.server;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * <p>
 * Java class for MetadataType.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * <p>
 * 
 * <pre>
 *  &lt;simpleType name=&quot;MetadataType&quot;&gt;
 *    &lt;restriction base=&quot;{http://www.w3.org/2001/XMLSchema}token&quot;&gt;
 *      &lt;enumeration value=&quot;THREDDS&quot;/&gt;
 *      &lt;enumeration value=&quot;ADN&quot;/&gt;
 *      &lt;enumeration value=&quot;Aggregation&quot;/&gt;
 *      &lt;enumeration value=&quot;CatalogGenConfig&quot;/&gt;
 *      &lt;enumeration value=&quot;DublinCore&quot;/&gt;
 *      &lt;enumeration value=&quot;DIF&quot;/&gt;
 *      &lt;enumeration value=&quot;FGDC&quot;/&gt;
 *      &lt;enumeration value=&quot;LAS&quot;/&gt;
 *      &lt;enumeration value=&quot;NetCDF&quot;/&gt;
 *      &lt;enumeration value=&quot;ESG&quot;/&gt;
 *      &lt;enumeration value=&quot;Other&quot;/&gt;
 *    &lt;/restriction&gt;
 *  &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlEnum
public enum MetadataType {

    ADN("ADN"), @XmlEnumValue("Aggregation")
    AGGREGATION("Aggregation"), @XmlEnumValue("CatalogGenConfig")
    CATALOG_GEN_CONFIG("CatalogGenConfig"), DIF("DIF"), @XmlEnumValue("DublinCore")
    DUBLIN_CORE("DublinCore"), ESG("ESG"), FGDC("FGDC"), LAS("LAS"), @XmlEnumValue("NetCDF")
    NET_CDF("NetCDF"), @XmlEnumValue("Other")
    OTHER("Other"), THREDDS("THREDDS");
    private final String value;

    MetadataType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MetadataType fromValue(String v) {
        for (MetadataType c : MetadataType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v.toString());
    }

}
